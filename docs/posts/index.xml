<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Nicolas Padula</title>
    <link>https://npadula.github.io/blog/posts/</link>
    <description>Recent content in Posts on Nicolas Padula</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 07 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://npadula.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Faster Insert Performance with Entity Framework and SqlBulkCopy</title>
      <link>https://npadula.github.io/blog/faster-insert-performance-with-entity-framework-and-sqlbulkcopy/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://npadula.github.io/blog/faster-insert-performance-with-entity-framework-and-sqlbulkcopy/</guid>
      <description>While Entity Framework is a great ORM tool, sometimes it falls short of the desired performance in operations involving large quantities of inserts. Since EF doesn&amp;rsquo;t support batch operations, the best approach in these cases is to do batch insert manually.
SqlBulkCopy provides a straightforward way to do this. All you have to do is build a DataTable out of the entities you want to insert, pass it to SqlBulkCopy and it&amp;rsquo;s done.</description>
    </item>
    
    <item>
      <title>Textbook-themed webdesign</title>
      <link>https://npadula.github.io/blog/textbook-themed-webdesign/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://npadula.github.io/blog/textbook-themed-webdesign/</guid>
      <description>My plan to create a personal website started out, as many others do, on WordPress. I was happy at first, but grew frustrated with its limitations and decided to write a website from scratch, which meant having to understand HTML and CSS at a deeper level than I had to before. I&amp;rsquo;ll highlight some of my design choices and give a walkthrough of how I implemented it with the help of a fantastic website generator called Hugo.</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://npadula.github.io/blog/markdown-syntax-guide/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://npadula.github.io/blog/markdown-syntax-guide/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://npadula.github.io/blog/rich-content/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://npadula.github.io/blog/rich-content/</guid>
      <description>&lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://npadula.github.io/blog/placeholder-text/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://npadula.github.io/blog/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de
pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://npadula.github.io/blog/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://npadula.github.io/blog/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
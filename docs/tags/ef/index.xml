<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ef on Nicolas Padula</title>
    <link>https://npadula.github.io/blog/tags/ef/</link>
    <description>Recent content in ef on Nicolas Padula</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 07 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://npadula.github.io/blog/tags/ef/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Faster Insert Performance with Entity Framework and SqlBulkCopy</title>
      <link>https://npadula.github.io/blog/faster-insert-performance-with-entity-framework-and-sqlbulkcopy/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://npadula.github.io/blog/faster-insert-performance-with-entity-framework-and-sqlbulkcopy/</guid>
      <description>While Entity Framework is a great ORM tool, sometimes it falls short of the desired performance in operations involving large quantities of inserts. Since EF doesn&amp;rsquo;t support batch operations, the best approach in these cases is to do batch insert manually.
SqlBulkCopy provides a straightforward way to do this. All you have to do is build a DataTable out of the entities you want to insert, pass it to SqlBulkCopy and it&amp;rsquo;s done.</description>
    </item>
    
  </channel>
</rss>
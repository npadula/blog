<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on nico.txt</title><link>https://npadula.com/blog/posts/</link><description>Recent content in Posts on nico.txt</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 11 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://npadula.com/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Visiting C#: Different ways of implementing the Visitor Pattern</title><link>https://npadula.com/blog/posts/visiting-csharp-different-ways-implementing-visitor-pattern/</link><pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate><guid>https://npadula.com/blog/posts/visiting-csharp-different-ways-implementing-visitor-pattern/</guid><description>The purpose of the Visitor pattern is to add new behavior to classes without modifying them (too much). By using Visitor, we can create new behavior that acts upon certain entities, without placing that behavior on the entities themselves.
For example, consider serialization: what is better? entity.serialize() or serializer.serialize(entity) ? I&amp;rsquo;d say that the second option is preferable because we may want to implement a complex serialization process with several dependencies that don&amp;rsquo;t really relate to the entity itself.</description></item><item><title>Foundations &amp; Intuition: Programming and Music</title><link>https://npadula.com/blog/posts/foundations-intuition-programming-music/</link><pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate><guid>https://npadula.com/blog/posts/foundations-intuition-programming-music/</guid><description>Fair warning: Probably none of what I&amp;rsquo;m going to say below is new or original.
Music and Missing Fundamentals As a teenager, with the primary goal of becoming cool in mind, I decided to learn how to play the bass. I bought a bass, downloaded For Whom the Bell Tolls' tabs, and started practicing. Fast forward a couple of years and I could sort-of-play more interesting songs, but, eventually, while learning tabs and practicing technique was fun, I started noticing limitations, which eventually (among other factors), led me to stop playing.</description></item><item><title>MOOCs: Done, Doing, Will Do</title><link>https://npadula.com/blog/posts/moocs-done-doing-will-do/</link><pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate><guid>https://npadula.com/blog/posts/moocs-done-doing-will-do/</guid><description>A list of online courses that I did, am doing, or would like to do sometime. Courses listed here can follow a structured/formal approach (they can have excercises like courses on Pluralsight and Coursera) or just be a simple collection of Youtube lectures.
Frontend React (Done) Corey House&amp;rsquo;s React/Redux on Pluralsight. Very useful for understanding the Flux architecture and how Redux implements it. (Done) Daniel Stern&amp;rsquo;s Redux-Saga. Good complement to the Redux course, also a good resource to understand generators in ES6.</description></item></channel></rss>